/*
	wrap request and response for better using
	author: wangningbo
	data:2013/11/17
	modify-log:
	-----------------------------------------------------------------------------------------
		NAME 		DATE		LOG
		wangningbo	2013/11/17	add cookie wrapper
		wangningbo	2013/11/17	add session wrapper
	-----------------------------------------------------------------------------------------
*/
var utils = require('../../utils');
var middleware = {
	req: [],
	res: [],
	config: {}
};

exports.wrapRequest = function(req){
	for (var i = 0; i < middleware.req.length; i++) {

		middleware.req[i].processRequest(req);
	};
	return req;
};
exports.wrapResponse = function(res){
	for (var i = 0; i < middleware.res.length; i++) {
		middleware.res[i].processResponse(res);
	};
	return res;
};
exports.add = function(name,_middleware){
	var mw = _middleware || require('./'+name);
	switch(mw.type){
		case 'request':
			middleware.req.push(mw);
			break;
		case 'response':
			middleware.res.push(mw);
			break;
		default:
			middleware.req.push(mw);
			middleware.res.push(mw);
			break;
	}
};

exports.setViewEngine = function(engine){
	middleware.res.push({
		processResponse: function(res){
			res.render = function(view,opt){
				var _script = '';
				utils.extend(opt,middleware.config['view options'],true);
				// utils.extend(opt,{
				// 	__delayScript: function(script){
				// 		_script = script;
				// 		return '';
				// 	},
				// 	__delayedScript: function(){
				// 		return _script;
				// 	}
				// },true);
				return engine.renderFile(middleware.config.view+view+'.html',opt,function(err,template){
					res.writeHead(200,{
						'Content-Type':'text/html;charset=utf-8',
						'Server':'windinsky',
						'Company':'windinsky'
					});
					if (err) throw err;
					return res.end(template+'\n');
				});
			},
			res.json = function(json){
				res.writeHead(200,{
					'Content-Type':'application/json;charset=utf-8',
					'Server':'windinsky'
				});
				return res.end(JSON.stringify(json)+'\n');
			}
		}
	});
};

exports.set = function(name,value){
	middleware.config[name] = value;
}